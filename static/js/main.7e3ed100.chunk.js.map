{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","_ref","images","step","frameSize","itemWidth","animationDuration","shift","setShift","useState","maxShift","length","prevFrameSizeRef","useRef","prevItemWidthRef","useEffect","current","prevShift","visibleItems","Math","abs","_jsx","className","style","width","concat","children","_jsxs","map","image","transform","transition","src","alt","cn","type","onClick","handlePrev","disabled","handleNext","nextShift","App","React","Component","constructor","arguments","state","render","this","htmlFor","id","name","min","max","value","onChange","event","setState","target","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.7e3ed100.chunk.js","sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Carousel.scss';\nimport cn from 'classnames';\n\ninterface Props {\n  images: string[];\n  step: number;\n  frameSize: number;\n  itemWidth: number;\n  animationDuration: number;\n}\nconst Carousel: React.FC<Props> = (\n  {\n    images,\n    step,\n    frameSize,\n    itemWidth,\n    animationDuration,\n  },\n) => {\n  const [shift, setShift] = useState(0);\n  const totalImagesWidth = images.length * itemWidth;\n  const maxShift = totalImagesWidth - itemWidth * frameSize;\n  const prevFrameSizeRef = useRef<number>(frameSize);\n  const prevItemWidthRef = useRef<number>(itemWidth);\n\n  useEffect(() => {\n    if (frameSize > prevFrameSizeRef.current\n      && shift <= maxShift * -1\n      && shift !== 0) {\n      setShift(prevShift => prevShift + itemWidth);\n    }\n\n    prevFrameSizeRef.current = frameSize;\n  }, [frameSize, maxShift, shift, itemWidth]);\n\n  useEffect(() => {\n    const widthDifference = itemWidth - prevItemWidthRef.current;\n\n    if (widthDifference > 0) {\n      const visibleItems = Math.abs(shift / prevItemWidthRef.current);\n      const newShift = visibleItems * itemWidth;\n\n      setShift(-newShift);\n    }\n\n    prevItemWidthRef.current = itemWidth;\n  }, [itemWidth, shift]);\n\n  const handleNext = () => {\n    const nextShift = shift - step * itemWidth;\n\n    if (nextShift >= -maxShift) {\n      setShift(nextShift);\n    } else {\n      setShift(-maxShift);\n    }\n  };\n\n  const handlePrev = () => {\n    const prevShift = shift + step * itemWidth;\n\n    if (prevShift <= 0) {\n      setShift(prevShift);\n    } else {\n      setShift(0);\n    }\n  };\n\n  return (\n    <div\n      className=\"Carousel\"\n      style={{\n        width: `${(itemWidth * frameSize)}px`,\n      }}\n    >\n      <div className=\"Carousel__container\">\n        <ul\n          className=\"Carousel__list\"\n        >\n          {images.map((image) => {\n            return (\n              <li\n                key={image}\n                style={{\n                  transform: `translateX(${shift}px)`,\n                  transition: `transform ${animationDuration}ms ease-in-out`,\n                }}\n              >\n\n                <img\n                  src={image}\n                  alt={`Item with ID ${image}`}\n                  style={{\n                    width: `${itemWidth}px`,\n                    transition: `${animationDuration}ms ease-in-out`,\n                  }}\n                />\n              </li>\n            );\n          })}\n        </ul>\n\n        <div className=\"Carousel__buttons\">\n          <button\n            className={cn('Carousel__button',\n              { 'disabled-button': shift === 0 })}\n            type=\"button\"\n            onClick={handlePrev}\n            disabled={shift === 0}\n          >\n            Prev\n          </button>\n          <button\n            className={cn('Carousel__button',\n              {\n                'disabled-button':\n            shift === -((images.length * itemWidth) - itemWidth * frameSize),\n              })}\n            type=\"button\"\n            data-cy=\"next\"\n            onClick={handleNext}\n            disabled={\n              shift === -((images.length * itemWidth) - itemWidth * frameSize)\n            }\n          >\n            Next\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[],\n  itemWidth: number;\n  frameSize: number;\n  step: number;\n  animationDuration: number;\n}\n\nclass App extends React.Component<{}, State> {\n  state = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n    itemWidth: 130,\n    frameSize: 3,\n    step: 3,\n    animationDuration: 1000,\n  };\n\n  render() {\n    const {\n      images,\n      itemWidth,\n      frameSize,\n      step,\n      animationDuration,\n    } = this.state;\n\n    const handleItemWidthChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ itemWidth: +event.target.value });\n    };\n\n    const handleFrameSizeChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ frameSize: +event.target.value });\n    };\n\n    const handleStepChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ step: +event.target.value });\n    };\n\n    const handleAnimationDurationChange\n    = (event: React.ChangeEvent<HTMLInputElement>) => {\n      this.setState({ animationDuration: +event.target.value });\n    };\n\n    return (\n      <div className=\"App\">\n        <h1 data-cy=\"title\" className=\"App__title\">\n          Carousel with\n          {' '}\n          {images.length}\n          {' '}\n          images\n        </h1>\n\n        <div className=\"App__container\">\n          <form className=\"App__form\">\n            <div className=\"App__element\">\n              <label htmlFor=\"width\">Item Width:</label>\n              <input\n                className=\"App__input\"\n                id=\"width\"\n                type=\"number\"\n                name=\"width\"\n                min={50}\n                max={390}\n                step={10}\n                value={itemWidth}\n                onChange={handleItemWidthChange}\n              />\n\n            </div>\n\n            <div className=\"App__element\">\n              <label htmlFor=\"size\">Frame Size:</label>\n              <input\n                className=\"App__input\"\n                type=\"number\"\n                name=\"size\"\n                id=\"size\"\n                value={frameSize}\n                min={1}\n                max={images.length}\n                onChange={handleFrameSizeChange}\n              />\n            </div>\n\n            <div className=\"App__element\">\n              <label htmlFor=\"step\">Step:</label>\n              <input\n                className=\"App__input\"\n                type=\"number\"\n                name=\"step\"\n                id=\"step\"\n                value={step}\n                min={1}\n                max={10}\n                onChange={handleStepChange}\n              />\n            </div>\n\n            <div className=\"App__element\">\n              <label htmlFor=\"animation\">Animation Duration:</label>\n              <input\n                className=\"App__input\"\n                type=\"number\"\n                name=\"animation\"\n                id=\"animation\"\n                value={animationDuration}\n                min={100}\n                step={100}\n                onChange={handleAnimationDurationChange}\n              />\n            </div>\n          </form>\n        </div>\n        <Carousel\n          images={images}\n          step={step}\n          frameSize={frameSize}\n          itemWidth={itemWidth}\n          animationDuration={animationDuration}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}